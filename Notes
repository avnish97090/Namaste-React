
               LECTURE 2 NOTES   


All the libraries that we need , all the utilities that we need come from npm


NPM :- Its a package manager , it will manage all the packages that we install in the system , sometime packages are also known as dependencies 



Package.json is basically a configuration for our NPM , it keeps track of all the dependencies , all the packages our code is using 

package-lock.json keep a track of exact version of all the tansitive and all the  dependencies that is being installed , package.json keeps track of approx version of dependencies .

Parcel comes as a node package , we will install that package , Parcel is a bundler .

npm install dependencyname   


node modules contains all the  code that we fetch from npm . pacakge.json is a configuration  for our npm , whereas node modules is kind of database  , it conatins the actual data of that dependencies , of those packages that our projects needs .
NODE MODULES  basically fetches all the code of all the dependencies into our system 

Transitive dependencies :-   



we put package.json and package-lock.json on git but not node modules 
 because package.json and package-lock.json 
 maintains a node of what all dependencies our project needs . so if i havve package , packagelock i can regenerate my node modules . i just need to enter command npm install .

 whatever we can regnerate dont put it on git . git should only have essential things . if i can regenearte my node modules on the server i dont want to   put it up on github



 React makes our app fast but react is not the only thing that makes our app fast , there are so many things like parcel and many libaries to make our app fast ,



-26 pe dist folder and parcel-cache k baare me bataya huaa hai dekh lo 




// React.createElement =>ReactElement =>  Object  => HTMLElement(render)


JSX  is a javascript syntx which is easier to create react element 



JSX (transpiled before it reaches the JS) - PARCEL - Babel 

Babel job is to transpile / convert jsx  to react code so that browser can understand


JSX=> Babel transpiles it to React.createElement => ReactElement -> JS Object => HTMLElement(render)
React element is rendered as an html element to the browser 


BABEL is a  some piece of  javascript code , its a javascript library , its a node library , npm package , whic takes a piece of code , reads that code  and convert that into something else , and it convert different type of code into different  type of code 


IF we have to give attribute to JSX we have to use camelcase , ex className 

in html we use as class but in jsx we use as className


JSX is a react element , so we can also say that functional component is a function which return a react element .


const jsxfile = <h1 id = "heading" className="head"> its is a jsx file </h1>   its a react element 


const jsxfile2 = (<h1 id = "heading2" className="head1"> 
its is a jsx file2 </h1>);  // for mutiple line we wrap up jsx into ()



root.render(<Headingcomponent2  />);  this how we render functional component , this is how bable understand 
 root.render(jsxfile2);  this is how we renderrr the react element 



COMPONENT COMPOSITION :- component k under component is called component composition 


JSX sanitize the data , whatever the data is coming then pass it , it prevents cross site scripting  attack for me. 
